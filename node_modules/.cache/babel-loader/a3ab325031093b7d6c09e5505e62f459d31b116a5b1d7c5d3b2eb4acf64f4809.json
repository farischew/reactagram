{"ast":null,"code":"import { firebase, FieldValue } from \"../lib/firebase\";\nexport async function doesUsernameExist(userName) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", userName).get();\n  return result.docs.map(user => user.data().length > 0);\n}\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection(\"users\").where(\"userId\", \"==\", userId).get();\n  const user = result.docs.map(item => ({\n    ...item.data(),\n    docId: item.id\n  }));\n  return user;\n}\nexport async function getUsersNotFollowed(userId, following) {\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\n  const output = result.docs.map(user => ({\n    ...user.data(),\n    docId: user.id\n  })).filter(profile => profile.userId !== userId && !following.includes(profile.userId)).filter(profile => profile.userId !== userId && !following.includes(profile.userId));\n  console.log(output);\n}","map":{"version":3,"names":["firebase","FieldValue","doesUsernameExist","userName","result","firestore","collection","where","get","docs","map","user","data","length","getUserByUserId","userId","item","docId","id","getUsersNotFollowed","following","limit","output","filter","profile","includes","console","log"],"sources":["/Users/admin/Desktop/Projects/reactagram/src/services/firebase.js"],"sourcesContent":["import { firebase, FieldValue } from \"../lib/firebase\";\n\nexport async function doesUsernameExist(userName) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", userName)\n    .get();\n\n  return result.docs.map((user) => user.data().length > 0);\n}\n\nexport async function getUserByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return user;\n}\n\nexport async function getUsersNotFollowed(userId, following) {\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\n\n  const output = result.docs\n    .map((user) => ({ ...user.data(), docId: user.id }))\n    .filter(\n      (profile) =>\n        profile.userId !== userId && !following.includes(profile.userId)\n    )\n    .filter(\n      (profile) =>\n        profile.userId !== userId && !following.includes(profile.userId)\n    );\n\n  console.log(output);\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,iBAAiB;AAEtD,OAAO,eAAeC,iBAAiBA,CAACC,QAAQ,EAAE;EAChD,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAC1BK,SAAS,CAAC,CAAC,CACXC,UAAU,CAAC,OAAO,CAAC,CACnBC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEJ,QAAQ,CAAC,CACjCK,GAAG,CAAC,CAAC;EAER,OAAOJ,MAAM,CAACK,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;AAC1D;AAEA,OAAO,eAAeC,eAAeA,CAACC,MAAM,EAAE;EAC5C,MAAMX,MAAM,GAAG,MAAMJ,QAAQ,CAC1BK,SAAS,CAAC,CAAC,CACXC,UAAU,CAAC,OAAO,CAAC,CACnBC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEQ,MAAM,CAAC,CAC7BP,GAAG,CAAC,CAAC;EAER,MAAMG,IAAI,GAAGP,MAAM,CAACK,IAAI,CAACC,GAAG,CAAEM,IAAI,KAAM;IACtC,GAAGA,IAAI,CAACJ,IAAI,CAAC,CAAC;IACdK,KAAK,EAAED,IAAI,CAACE;EACd,CAAC,CAAC,CAAC;EAEH,OAAOP,IAAI;AACb;AAEA,OAAO,eAAeQ,mBAAmBA,CAACJ,MAAM,EAAEK,SAAS,EAAE;EAC3D,MAAMhB,MAAM,GAAG,MAAMJ,QAAQ,CAACK,SAAS,CAAC,CAAC,CAACC,UAAU,CAAC,OAAO,CAAC,CAACe,KAAK,CAAC,EAAE,CAAC,CAACb,GAAG,CAAC,CAAC;EAE7E,MAAMc,MAAM,GAAGlB,MAAM,CAACK,IAAI,CACvBC,GAAG,CAAEC,IAAI,KAAM;IAAE,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC;IAAEK,KAAK,EAAEN,IAAI,CAACO;EAAG,CAAC,CAAC,CAAC,CACnDK,MAAM,CACJC,OAAO,IACNA,OAAO,CAACT,MAAM,KAAKA,MAAM,IAAI,CAACK,SAAS,CAACK,QAAQ,CAACD,OAAO,CAACT,MAAM,CACnE,CAAC,CACAQ,MAAM,CACJC,OAAO,IACNA,OAAO,CAACT,MAAM,KAAKA,MAAM,IAAI,CAACK,SAAS,CAACK,QAAQ,CAACD,OAAO,CAACT,MAAM,CACnE,CAAC;EAEHW,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}