{"ast":null,"code":"import { firebase, FieldValue } from \"../lib/firebase\";\nexport async function doesUsernameExist(username) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", username.toLowerCase()).get();\n  return result.docs.length > 0;\n}\nexport async function getUserByUsername(username) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", username.toLowerCase()).get();\n  return result.docs.map(item => ({\n    ...item.data(),\n    docId: item.id\n  }));\n}\n\n// get user from the firestore where userId === userId (passed from the auth)\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection(\"users\").where(\"userId\", \"==\", userId).get();\n  const user = result.docs.map(item => ({\n    ...item.data(),\n    docId: item.id\n  }));\n  return user;\n}\n\n// check all conditions before limit results\nexport async function getSuggestedProfiles(userId, following) {\n  let query = firebase.firestore().collection(\"users\");\n  if (following.length > 0) {\n    query = query.where(\"userId\", \"not-in\", [...following, userId]);\n  } else {\n    query = query.where(\"userId\", \"!=\", userId);\n  }\n  const result = await query.limit(10).get();\n  const profiles = result.docs.map(user => ({\n    ...user.data(),\n    docId: user.id\n  }));\n  return profiles;\n}\nexport async function updateLoggedInUserFollowing(loggedInUserDocId,\n// currently logged in user document id (karl's profile)\nprofileId,\n// the user that karl requests to follow\nisFollowingProfile // true/false (am i currently following this person?)\n) {\n  console.log(\"updateLoggedInUserFollowing\");\n  return firebase.firestore().collection(\"users\").doc(loggedInUserDocId).update({\n    following: isFollowingProfile ? FieldValue.arrayRemove(profileId) : FieldValue.arrayUnion(profileId)\n  });\n}\nexport async function updateFollowedUserFollowers(profileDocId,\n// currently logged in user document id (karl's profile)\nloggedInUserDocId,\n// the user that karl requests to follow\nisFollowingProfile // true/false (am i currently following this person?)\n) {\n  console.log(\"updateFollowedUserFollowers\");\n  return firebase.firestore().collection(\"users\").doc(profileDocId).update({\n    followers: isFollowingProfile ? FieldValue.arrayRemove(loggedInUserDocId) : FieldValue.arrayUnion(loggedInUserDocId)\n  });\n}\nexport async function getPhotos(userId, following) {\n  console.log(\"getPhotos\");\n  // [5,4,2] => following\n  const result = await firebase.firestore().collection(\"photos\").where(\"userId\", \"in\", following).get();\n  const userFollowedPhotos = result.docs.map(photo => ({\n    ...photo.data(),\n    docId: photo.id\n  }));\n  const photosWithUserDetails = await Promise.all(userFollowedPhotos.map(async photo => {\n    let userLikedPhoto = false;\n    if (photo.likes.includes(userId)) {\n      userLikedPhoto = true;\n    }\n    // photo.userId = 2\n    const user = await getUserByUserId(photo.userId);\n    // raphael\n    const {\n      username\n    } = user[0];\n    return {\n      username,\n      ...photo,\n      userLikedPhoto\n    };\n  }));\n  return photosWithUserDetails;\n}\nexport async function getUserPhotosByUserId(userId) {\n  console.log(\"getUserPhotosByUserId\");\n  const result = await firebase.firestore().collection(\"photos\").where(\"userId\", \"==\", userId).get();\n  const photos = result.docs.map(photo => ({\n    ...photo.data(),\n    docId: photo.id\n  }));\n  return photos;\n}\nexport async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\n  console.log(\"isUserFollowingProfile\");\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", loggedInUserUsername) // karl (active logged in user)\n  .where(\"following\", \"array-contains\", profileUserId).get();\n  const [response = {}] = result.docs.map(item => ({\n    ...item.data(),\n    docId: item.id\n  }));\n  return response.userId;\n}\nexport async function toggleFollow(isFollowingProfile, activeUserDocId, profileDocId, profileUserId, followingUserId) {\n  console.log(\"toggleFollow\");\n  // 1st param: karl's doc id\n  // 2nd param: raphael's user id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\n\n  // 1st param: karl's user id\n  // 2nd param: raphael's doc id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}","map":{"version":3,"names":["firebase","FieldValue","doesUsernameExist","username","result","firestore","collection","where","toLowerCase","get","docs","length","getUserByUsername","map","item","data","docId","id","getUserByUserId","userId","user","getSuggestedProfiles","following","query","limit","profiles","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","console","log","doc","update","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","followers","getPhotos","userFollowedPhotos","photo","photosWithUserDetails","Promise","all","userLikedPhoto","likes","includes","getUserPhotosByUserId","photos","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","toggleFollow","activeUserDocId","followingUserId"],"sources":["/Users/admin/Desktop/Projects/reactagram/src/services/firebase.js"],"sourcesContent":["import { firebase, FieldValue } from \"../lib/firebase\";\n\nexport async function doesUsernameExist(username) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", username.toLowerCase())\n    .get();\n\n  return result.docs.length > 0;\n}\n\nexport async function getUserByUsername(username) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", username.toLowerCase())\n    .get();\n\n  return result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n}\n\n// get user from the firestore where userId === userId (passed from the auth)\nexport async function getUserByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return user;\n}\n\n// check all conditions before limit results\nexport async function getSuggestedProfiles(userId, following) {\n  let query = firebase.firestore().collection(\"users\");\n\n  if (following.length > 0) {\n    query = query.where(\"userId\", \"not-in\", [...following, userId]);\n  } else {\n    query = query.where(\"userId\", \"!=\", userId);\n  }\n  const result = await query.limit(10).get();\n\n  const profiles = result.docs.map((user) => ({\n    ...user.data(),\n    docId: user.id,\n  }));\n\n  return profiles;\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId, // currently logged in user document id (karl's profile)\n  profileId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  console.log(\"updateLoggedInUserFollowing\");\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(loggedInUserDocId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(profileId)\n        : FieldValue.arrayUnion(profileId),\n    });\n}\n\nexport async function updateFollowedUserFollowers(\n  profileDocId, // currently logged in user document id (karl's profile)\n  loggedInUserDocId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  console.log(\"updateFollowedUserFollowers\");\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(profileDocId)\n    .update({\n      followers: isFollowingProfile\n        ? FieldValue.arrayRemove(loggedInUserDocId)\n        : FieldValue.arrayUnion(loggedInUserDocId),\n    });\n}\n\nexport async function getPhotos(userId, following) {\n  console.log(\"getPhotos\");\n  // [5,4,2] => following\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"userId\", \"in\", following)\n    .get();\n\n  const userFollowedPhotos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      // photo.userId = 2\n      const user = await getUserByUserId(photo.userId);\n      // raphael\n      const { username } = user[0];\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n\n  return photosWithUserDetails;\n}\n\nexport async function getUserPhotosByUserId(userId) {\n  console.log(\"getUserPhotosByUserId\");\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n\n  const photos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n  return photos;\n}\n\nexport async function isUserFollowingProfile(\n  loggedInUserUsername,\n  profileUserId\n) {\n  console.log(\"isUserFollowingProfile\");\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", loggedInUserUsername) // karl (active logged in user)\n    .where(\"following\", \"array-contains\", profileUserId)\n    .get();\n\n  const [response = {}] = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return response.userId;\n}\n\nexport async function toggleFollow(\n  isFollowingProfile,\n  activeUserDocId,\n  profileDocId,\n  profileUserId,\n  followingUserId\n) {\n  console.log(\"toggleFollow\");\n  // 1st param: karl's doc id\n  // 2nd param: raphael's user id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateLoggedInUserFollowing(\n    activeUserDocId,\n    profileUserId,\n    isFollowingProfile\n  );\n\n  // 1st param: karl's user id\n  // 2nd param: raphael's doc id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateFollowedUserFollowers(\n    profileDocId,\n    followingUserId,\n    isFollowingProfile\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}