{"ast":null,"code":"import { firebase, FieldValue } from \"../lib/firebase\";\nexport async function doesUsernameExist(userName) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", userName).get();\n  return result.docs.map(user => user.data().length > 0);\n}\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection(\"users\").where(\"userId\", \"==\", userId).get();\n  const user = result.docs.map(item => ({\n    ...item.data(),\n    docId: item.id\n  }));\n  return user;\n}\nexport async function getUsersNotFollowed(userId, following) {\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\n  const output = result.docs.map(user => ({\n    ...user.data(),\n    docId: user.id\n  })).filter(profile => profile.userId !== userId && !following.includes(profile.userId)).filter(profile => profile.userId !== userId && !following.includes(profile.userId));\n  return output;\n}\nexport async function updateLoggedInUserFollowing(loggedInUserDocId, profileId, isFollowingProfile) {\n  return firebase.firestore().collection(\"users\").doc(loggedInUserDocId).update({\n    following: isFollowingProfile ? FieldValue.arrayRemove(profileId) : FieldValue.arrayUnion(profileId)\n  });\n}\nexport async function updateFollowedUserFollowers(spDocId, userId, isFollowingProfile) {\n  return firebase.firestore().collection(\"users\").doc(spDocId).update({\n    followers: isFollowingProfile ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId)\n  });\n}\nexport async function getPhotos(userId, following) {\n  const result = await firebase.firestore().collection(\"photos\").where(\"userId\", \"in\", following).get();\n  const userFollowedPhotos = result.docs.map(photo => ({\n    ...photo.data(),\n    docId: photo.id\n  }));\n  const photosWithUserDetails = await Promise.all(userFollowedPhotos.map(async photo => {\n    let userLikedPhoto = false;\n    if (photo.likes.includes(userId)) {\n      userLikedPhoto = true;\n    }\n    const user = await getUserByUserId(photo.userId);\n    const {\n      username\n    } = user[0];\n    return {\n      username,\n      ...photo,\n      userLikedPhoto\n    };\n  }));\n  return photosWithUserDetails;\n}","map":{"version":3,"names":["firebase","FieldValue","doesUsernameExist","userName","result","firestore","collection","where","get","docs","map","user","data","length","getUserByUserId","userId","item","docId","id","getUsersNotFollowed","following","limit","output","filter","profile","includes","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","arrayRemove","arrayUnion","updateFollowedUserFollowers","spDocId","followers","getPhotos","userFollowedPhotos","photo","photosWithUserDetails","Promise","all","userLikedPhoto","likes","username"],"sources":["/Users/admin/Desktop/Projects/reactagram/src/services/firebase.js"],"sourcesContent":["import { firebase, FieldValue } from \"../lib/firebase\";\n\nexport async function doesUsernameExist(userName) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", userName)\n    .get();\n\n  return result.docs.map((user) => user.data().length > 0);\n}\n\nexport async function getUserByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return user;\n}\n\nexport async function getUsersNotFollowed(userId, following) {\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\n\n  const output = result.docs\n    .map((user) => ({ ...user.data(), docId: user.id }))\n    .filter(\n      (profile) =>\n        profile.userId !== userId && !following.includes(profile.userId)\n    )\n    .filter(\n      (profile) =>\n        profile.userId !== userId && !following.includes(profile.userId)\n    );\n\n  return output;\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId,\n  profileId,\n  isFollowingProfile\n) {\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(loggedInUserDocId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(profileId)\n        : FieldValue.arrayUnion(profileId),\n    });\n}\n\nexport async function updateFollowedUserFollowers(\n  spDocId,\n  userId,\n  isFollowingProfile\n) {\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(spDocId)\n    .update({\n      followers: isFollowingProfile\n        ? FieldValue.arrayRemove(userId)\n        : FieldValue.arrayUnion(userId),\n    });\n}\n\nexport async function getPhotos(userId, following) {\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"userId\", \"in\", following)\n    .get();\n\n  const userFollowedPhotos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      const user = await getUserByUserId(photo.userId);\n      const { username } = user[0];\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n\n  return photosWithUserDetails;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}