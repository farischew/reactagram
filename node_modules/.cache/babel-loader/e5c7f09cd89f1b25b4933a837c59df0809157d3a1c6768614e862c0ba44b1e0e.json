{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Projects/reactagram/src/components/post/comments.js\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport formatDistance from \"date-fns/formatDistance\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput\n  } = _ref;\n  const [comments, setComments] = useState(allComments);\n  const [showComments, setShowComments] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pt-0 pb-4\",\n      children: [showComments && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-base mb-1 cursor-pointer\",\n        children: [\"View all \", comments.length, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), !showComments && comments.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/p/${item.displayName}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-1 font-bold\",\n            children: item.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, `${item.comment}-${item.displayName}}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-base uppsercase text-xs mt-2\",\n        children: [formatDistance(posted, new Date()), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      docId: docId,\n      comments: comments,\n      setComments: setComments,\n      commentInput: commentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Comments, \"sPNhC6iBAiDENnEKXXEK6gWItrA=\");\n_c = Comments;\nComments.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  posted: PropTypes.number.isRequired,\n  commentInput: PropTypes.object.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["PropTypes","formatDistance","useState","Link","AddComment","jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","_ref","_s","docId","comments","allComments","posted","commentInput","setComments","showComments","setShowComments","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","item","to","displayName","comment","Date","_c","propTypes","string","isRequired","array","number","object","$RefreshReg$"],"sources":["/Users/admin/Desktop/Projects/reactagram/src/components/post/comments.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport formatDistance from \"date-fns/formatDistance\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\n\nexport default function Comments({\n  docId,\n  comments: allComments,\n  posted,\n  commentInput,\n}) {\n  const [comments, setComments] = useState(allComments);\n\n  const [showComments, setShowComments] = useState(false);\n\n  return (\n    <>\n      <div className=\"p-4 pt-0 pb-4\">\n        {showComments && (\n          <p className=\"text-sm text-gray-base mb-1 cursor-pointer\">\n            View all {comments.length} comments\n          </p>\n        )}\n        {!showComments &&\n          comments.slice(0, 3).map((item) => (\n            <p key={`${item.comment}-${item.displayName}}`} className=\"mb-1\">\n              <Link to={`/p/${item.displayName}`}>\n                <span className=\"mr-1 font-bold\">{item.displayName}</span>\n              </Link>\n              <span>{item.comment}</span>\n            </p>\n          ))}\n        {/* {comments.length >= 3 && (\n          <p className=\"text-sm text-gray-base mb-1 cursor-pointer\">\n            View All {comments.length} comments\n          </p>\n        )}\n        {comments.slice(0, 3).map((item) => (\n          <p key={`${item.comment}-${item.displayName}}`} className=\"mb-1\">\n            <Link to={`/p/${item.displayName}`}>\n              <span className=\"mr-1 font-bold\">{item.displayName}</span>\n            </Link>\n            <span>{item.comment}</span>\n          </p>\n        ))} */}\n        <p className=\"text-gray-base uppsercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  );\n}\n\nComments.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  posted: PropTypes.number.isRequired,\n  commentInput: PropTypes.object.isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}